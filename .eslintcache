[{"/home/sandip/Documents/web/live/calypsu/quillmall/src/index.js":"1","/home/sandip/Documents/web/live/calypsu/quillmall/src/utils.js":"2","/home/sandip/Documents/web/live/calypsu/quillmall/src/assets/documents/countries.js":"3","/home/sandip/Documents/web/live/calypsu/quillmall/src/components/QuestionDialog.js":"4","/home/sandip/Documents/web/live/calypsu/quillmall/src/contexts/Questions.js":"5","/home/sandip/Documents/web/live/calypsu/quillmall/src/pages/quiz-complete.js":"6","/home/sandip/Documents/web/live/calypsu/quillmall/src/pages/map.js":"7"},{"size":511,"mtime":1607654564746,"results":"8","hashOfConfig":"9"},{"size":202,"mtime":1607654564746,"results":"10","hashOfConfig":"9"},{"size":25167,"mtime":1608010919217,"results":"11","hashOfConfig":"9"},{"size":4468,"mtime":1607975304913,"results":"12","hashOfConfig":"9"},{"size":4005,"mtime":1608009018576,"results":"13","hashOfConfig":"9"},{"size":4180,"mtime":1607972013332,"results":"14","hashOfConfig":"9"},{"size":71466,"mtime":1607972054309,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v50nn4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sandip/Documents/web/live/calypsu/quillmall/src/index.js",[],"/home/sandip/Documents/web/live/calypsu/quillmall/src/utils.js",["33"],"export const sendError = msg => ({ error: msg });\n\nexport const gen_random = num => Math.floor(Math.random() * num);\n\nexport const check_answer = (question, answer) => question.correct_answer == answer;",["34","35"],"/home/sandip/Documents/web/live/calypsu/quillmall/src/assets/documents/countries.js",[],"/home/sandip/Documents/web/live/calypsu/quillmall/src/components/QuestionDialog.js",["36","37"],"/home/sandip/Documents/web/live/calypsu/quillmall/src/contexts/Questions.js",["38","39","40","41","42","43","44","45"],"import React, { useEffect, useState } from 'react';\nimport { sendError, gen_random, check_answer } from '../utils';\nimport { countries as DefaultCountryList } from '../assets/documents/countries';\n\nexport const QuestionsContext = React.createContext();\n\nexport default function QuestionsContextProvider({ children }) {\n\n    const [countries, setCountries] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [currentCountry, setCurrentCountry] = useState(null);\n    const [completed, setCompleted] = useState(false);\n    const [score, setScore] = useState(0);\n\n    const fetchCountries = () => {\n        const data = JSON.parse(JSON.stringify(DefaultCountryList[0]));\n        shuffle(data);\n        setCountries(data.slice(0, 10));\n    }\n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        while (0 !== currentIndex) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }      \n\n    const setNewQuestion = (country_name = null) => {\n        let remaining_countries = countries.filter(country => !country.done);\n\n        let country_index = -1;\n        if (country_name == null) country_index = gen_random(remaining_countries.length);\n        else {\n            remaining_countries.map((country, index) => {\n                if (country.name == country_name) country_index = index;\n            });\n\n            // IF THE COUNTRY DOES NOT EXIST IN THE LIST OF REMAINING COUNTRIES\n            // THEN IT CREATES A NEW LIST THAT REMOVES ONE COUNTRY AND ADDS THE NEW COUNTRY\n            if (country_index == -1) {\n                const excludedCountry = DefaultCountryList[0].find(country => country.name == country_name);\n                remaining_countries = [ ...remaining_countries.slice(0, remaining_countries.length - 1), excludedCountry ];\n                country_index = remaining_countries.length - 1;\n            }\n        }\n\n        // REMOVE AFTER GETTING DATA\n        country_index = (country_index == -1) ? 0 : country_index;\n        \n        const current_country = { ...remaining_countries[country_index] };\n        console.log(current_country);\n        const current_question = current_country.questions[gen_random(current_country.questions.length)];\n        \n        const removed_country = remaining_countries.splice(country_index, 1)[0];\n        removed_country.done = true;\n\n        setCountries([\n            ...countries.filter(country => country.done),\n            ...remaining_countries\n        ]);\n        setCurrentCountry(current_country);\n        setCurrentQuestion(current_question);\n    }\n\n    const changeQuestion = () => {\n        if (currentQuestion.answer == -1) {\n            return sendError(\"Current question isn't answered\");\n        } else {\n            const isCorrect = check_answer(currentQuestion, currentQuestion.answer);\n            setScore(isCorrect ? score + 1 : score);\n            if (countries.filter(country => !country.done).length == 0) {\n                setCompleted(true);\n            } else {\n                setNewQuestion();\n                return true;\n            }\n        }\n    }\n\n    const resetQuestionsContext = () => {\n        fetchCountries();\n        setCurrentQuestion(false);\n        setCurrentCountry(null);\n        setCompleted(false);\n        setScore(0);\n    }\n\n    return (\n        <QuestionsContext.Provider\n            value={{\n                currentQuestion, setCurrentQuestion,\n                currentCountry,\n                changeQuestion,\n                completed,\n                score,\n                setNewQuestion,\n                resetQuestionsContext,\n                countries\n            }}\n        >\n            {children}\n        </QuestionsContext.Provider>\n    );\n}","/home/sandip/Documents/web/live/calypsu/quillmall/src/pages/quiz-complete.js",[],"/home/sandip/Documents/web/live/calypsu/quillmall/src/pages/map.js",["46","47","48","49","50","51","52"],{"ruleId":"53","severity":1,"message":"54","line":5,"column":75,"nodeType":"55","messageId":"56","endLine":5,"endColumn":77},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":26,"column":8,"nodeType":"63","endLine":26,"endColumn":27,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"54","line":83,"column":53,"nodeType":"55","messageId":"56","endLine":83,"endColumn":55},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"70","line":42,"column":54,"nodeType":"71","messageId":"72","endLine":42,"endColumn":56},{"ruleId":"53","severity":1,"message":"54","line":43,"column":34,"nodeType":"55","messageId":"56","endLine":43,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":48,"column":31,"nodeType":"55","messageId":"56","endLine":48,"endColumn":33},{"ruleId":"53","severity":1,"message":"54","line":49,"column":92,"nodeType":"55","messageId":"56","endLine":49,"endColumn":94},{"ruleId":"53","severity":1,"message":"54","line":56,"column":40,"nodeType":"55","messageId":"56","endLine":56,"endColumn":42},{"ruleId":"53","severity":1,"message":"54","line":74,"column":36,"nodeType":"55","messageId":"56","endLine":74,"endColumn":38},{"ruleId":"53","severity":1,"message":"54","line":79,"column":67,"nodeType":"55","messageId":"56","endLine":79,"endColumn":69},{"ruleId":"65","severity":1,"message":"73","line":10,"column":24,"nodeType":"67","messageId":"68","endLine":10,"endColumn":33},{"ruleId":"53","severity":1,"message":"74","line":33,"column":46,"nodeType":"55","messageId":"56","endLine":33,"endColumn":48},{"ruleId":"53","severity":1,"message":"54","line":37,"column":30,"nodeType":"55","messageId":"56","endLine":37,"endColumn":32},{"ruleId":"61","severity":1,"message":"75","line":45,"column":8,"nodeType":"63","endLine":45,"endColumn":10,"suggestions":"76"},{"ruleId":"53","severity":1,"message":"54","line":49,"column":79,"nodeType":"55","messageId":"56","endLine":49,"endColumn":81},{"ruleId":"61","severity":1,"message":"77","line":58,"column":8,"nodeType":"63","endLine":58,"endColumn":24,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":292,"column":17,"nodeType":"81","endLine":292,"endColumn":126},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeQuestion'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'countries' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'resetQuestionsContext'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has a missing dependency: 'countryPointers'. Either include it or remove the dependency array.",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [changeQuestion, showCorrectAnswer]",{"range":"93","text":"94"},"Update the dependencies array to be: [resetQuestionsContext]",{"range":"95","text":"96"},"Update the dependencies array to be: [countryPointers, currentCountry]",{"range":"97","text":"98"},[958,977],"[changeQuestion, showCorrectAnswer]",[1696,1698],"[resetQuestionsContext]",[2234,2250],"[countryPointers, currentCountry]"]