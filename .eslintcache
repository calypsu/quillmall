[{"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/map.js":"1","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/components/QuestionDialog.js":"2","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/contexts/Questions.js":"3","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/assets/documents/countries.js":"4","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/quiz-complete.js":"5","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/index.js":"6","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/utils.js":"7"},{"size":72206,"mtime":1608036215072,"results":"8","hashOfConfig":"9"},{"size":4468,"mtime":1607987596841,"results":"10","hashOfConfig":"9"},{"size":4434,"mtime":1608025558740,"results":"11","hashOfConfig":"9"},{"size":17940,"mtime":1608154915369,"results":"12","hashOfConfig":"9"},{"size":4242,"mtime":1608037464950,"results":"13","hashOfConfig":"9"},{"size":1472,"mtime":1607670183099,"results":"14","hashOfConfig":"9"},{"size":202,"mtime":1607617872426,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1u5ehkx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/map.js",["31","32","33","34","35","36","37"],"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/components/QuestionDialog.js",["38","39"],"import React, { useContext, useEffect, useState } from 'react';\nimport { QuestionsContext } from '../contexts/Questions';\nimport { check_answer } from '../utils';\n\nconst replace_line_breaks = text => text.split(/\\n/).map(e => <span>{e}<br /></span>);\n\nexport default function QuestionDialog(props) {\n    const { countries, currentQuestion, changeQuestion, setCurrentQuestion, completed } = useContext(QuestionsContext);\n\n    const { show } = props;\n    const TIMER_SECONDS = 2;\n\n    const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\n    const [timer, setTimer] = useState(TIMER_SECONDS);\n\n    useEffect(() => {\n        if (showCorrectAnswer) {\n            setTimer(TIMER_SECONDS);\n            const next = () => {\n                const result = changeQuestion();\n                setShowCorrectAnswer(false);\n                if (result && result.error) alert(result.error);\n            };\n            setTimeout(next, 1200);\n        }\n    }, [showCorrectAnswer]);\n\n    useEffect(() => {\n        if (timer > 1 && showCorrectAnswer) setTimeout(() => {\n            setTimer(timer - 1);\n        }, 1000);\n    }, [timer, showCorrectAnswer]);\n\n    if (currentQuestion && show && !completed) {\n        let question = currentQuestion.question;\n        question = replace_line_breaks(question);\n\n        return (\n            <div className=\"absolute top-0 right-0 pa5\" style={{\n                height: '100vh',\n                background: 'linear-gradient(90deg, #CF4630 0%, #D04631 5%, #E3473B 60%, #EA483F 100%)',\n                width: '50vw'\n            }}>\n                <div className=\"question\">\n                    <div className=\"pv5 tc\">\n                        <span style={{border: \"5px dashed white\", borderRadius: \"50%\", padding: \"0px 30px\", fontSize: \"2.5rem\", color: \"white\"}}>\n                            {countries.filter(q => q.done).length}\n                        </span>\n                        <span className=\"pl3\" style={{fontSize: \"2.5rem\", color: \"white\"}}>\n                        السؤال\n                        </span>    \n                    </div> \n                    <div className=\"pv4 tr\" style={{ fontSize: \"2rem\", color: \"white\"}}>\n                    {question}\n                    </div>\n                    <ul style={{listStyleType: \"none\", paddingInlineStart: \"0\"}}>\n                        {currentQuestion.options.map((option, index) => (\n                            <li className=\"option mv4\" key={index}>\n                                <button style={{fontSize: \"2rem\", padding: \"20px 40px\", \n                                border: \"10px solid #054BC8\", \n                                borderRadius: \"20px\", width: \"100%\"}} { ...(!showCorrectAnswer ? {\n                                    onClick: () => {\n                                        setCurrentQuestion({\n                                            ...currentQuestion,\n                                            answer: index\n                                        })\n                                        setShowCorrectAnswer(true)\n                                    },\n                                } : {\n                                    // SET CLASSNAME FOR RIGHT OR WRONG HERE\n                                    id: check_answer(currentQuestion, index) ? 'correct' : 'wrong'\n                                }) }>\n                                    {option}\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                    {!showCorrectAnswer ?\n                        ''\n                        :\n                        <>\n                            <span style={{color: \"white\", fontSize: \"1.5rem\"}}></span>\n                            {currentQuestion.answer == currentQuestion.correct_answer ?\n                                <audio autoplay=\"true\">\n                                    <source src={require('../assets/sounds/correct.wav').default} type=\"audio/wav\" />\n                                </audio>\n                                :\n                                <audio autoplay=\"true\">\n                                    <source src={require('../assets/sounds/incorrect.wav').default} type=\"audio/wav\" />\n                                </audio>\n                            }\n                        </>\n                    }\n                </div>\n            </div>\n        );\n    } else {\n        return (<></>)\n    }\n}","/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/contexts/Questions.js",["40","41","42","43","44","45","46","47"],"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/assets/documents/countries.js",[],"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/quiz-complete.js",["48"],"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/pages/index.js",[],"/Users/abhishekchalla/Desktop/Projects/calypsu/quillmall/src/utils.js",["49"],{"ruleId":"50","severity":1,"message":"51","line":10,"column":24,"nodeType":"52","messageId":"53","endLine":10,"endColumn":33},{"ruleId":"54","severity":1,"message":"55","line":33,"column":46,"nodeType":"56","messageId":"57","endLine":33,"endColumn":48},{"ruleId":"54","severity":1,"message":"58","line":37,"column":30,"nodeType":"56","messageId":"57","endLine":37,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":45,"column":8,"nodeType":"61","endLine":45,"endColumn":10,"suggestions":"62"},{"ruleId":"54","severity":1,"message":"58","line":49,"column":79,"nodeType":"56","messageId":"57","endLine":49,"endColumn":81},{"ruleId":"59","severity":1,"message":"63","line":58,"column":8,"nodeType":"61","endLine":58,"endColumn":24,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":292,"column":17,"nodeType":"67","endLine":292,"endColumn":126},{"ruleId":"59","severity":1,"message":"68","line":26,"column":8,"nodeType":"61","endLine":26,"endColumn":27,"suggestions":"69"},{"ruleId":"54","severity":1,"message":"58","line":83,"column":53,"nodeType":"56","messageId":"57","endLine":83,"endColumn":55},{"ruleId":"70","severity":1,"message":"71","line":49,"column":54,"nodeType":"72","messageId":"73","endLine":49,"endColumn":56},{"ruleId":"54","severity":1,"message":"58","line":50,"column":34,"nodeType":"56","messageId":"57","endLine":50,"endColumn":36},{"ruleId":"54","severity":1,"message":"58","line":55,"column":31,"nodeType":"56","messageId":"57","endLine":55,"endColumn":33},{"ruleId":"54","severity":1,"message":"58","line":56,"column":89,"nodeType":"56","messageId":"57","endLine":56,"endColumn":91},{"ruleId":"54","severity":1,"message":"58","line":64,"column":40,"nodeType":"56","messageId":"57","endLine":64,"endColumn":42},{"ruleId":"54","severity":1,"message":"58","line":81,"column":36,"nodeType":"56","messageId":"57","endLine":81,"endColumn":38},{"ruleId":"54","severity":1,"message":"58","line":86,"column":67,"nodeType":"56","messageId":"57","endLine":86,"endColumn":69},{"ruleId":"59","severity":1,"message":"74","line":106,"column":8,"nodeType":"61","endLine":106,"endColumn":28,"suggestions":"75"},{"ruleId":"54","severity":1,"message":"58","line":20,"column":30,"nodeType":"56","messageId":"57","endLine":20,"endColumn":32},{"ruleId":"54","severity":1,"message":"58","line":5,"column":75,"nodeType":"56","messageId":"57","endLine":5,"endColumn":77},"no-unused-vars","'countries' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'resetQuestionsContext'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'countryPointers'. Either include it or remove the dependency array.",["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'changeQuestion'. Either include it or remove the dependency array.",["78"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [resetQuestionsContext]",{"range":"88","text":"89"},"Update the dependencies array to be: [countryPointers, currentCountry]",{"range":"90","text":"91"},"Update the dependencies array to be: [changeQuestion, showCorrectAnswer]",{"range":"92","text":"93"},"Update the dependencies array to be: [DefaultCountryList, fetchCountries]",{"range":"94","text":"95"},[1716,1718],"[resetQuestionsContext]",[2254,2270],"[countryPointers, currentCountry]",[958,977],"[changeQuestion, showCorrectAnswer]",[3948,3968],"[DefaultCountryList, fetchCountries]"]